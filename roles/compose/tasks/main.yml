---
- name: create docker-compose.yml
  copy:
    dest: "/tmp/netbox-docker/docker-compose.yml"
    content: |
      services:
        netbox: &netbox
          image: docker.io/netboxcommunity/netbox:${VERSION-v4.0-2.9.1}
          depends_on:
            - postgres
            - redis
            - redis-cache
          {% if netbox.ip %}ip: {{ netbox.ip }}{% endif %}

          {% if netbox.hostname %}hostname: {{ netbox.hostname }}{% endif %}          
          {% if netbox.networks %}
      networks:
          {% for network in netbox.networks %}
              - {{network}}
          {% endfor %}
          {% endif %}

          env_file: env/netbox.env
          user: 'unit:root'
          healthcheck:
            start_period: 60s
            timeout: 3s
            interval: 15s
            test: "curl -f http://localhost:8080/login/ || exit 1"
          volumes:
            - ./configuration:/etc/netbox/config:z,ro
            - netbox-media-files:/opt/netbox/netbox/media:rw
            - netbox-reports-files:/opt/netbox/netbox/reports:rw
            - netbox-scripts-files:/opt/netbox/netbox/scripts:rw
        netbox-worker:
          <<: *netbox
          {% if netbox_worker.ip %}ip: {{ netbox_worker.ip }}{% endif %}

          {% if netbox_worker.hostname %}hostname: {{ netbox_worker.hostname }}{% endif %}          
          {% if netbox_worker.networks %}
      networks:
          {% for network in netbox_worker.networks %}
              - {{network}}
          {% endfor %}
          {% endif %}

          depends_on:
            netbox:
              condition: service_healthy
          command:
            - /opt/netbox/venv/bin/python
            - /opt/netbox/netbox/manage.py
            - rqworker
          healthcheck:
            start_period: 20s
            timeout: 3s
            interval: 15s
            test: "ps -aux | grep -v grep | grep -q rqworker || exit 1"
        netbox-housekeeping:
          <<: *netbox
          {% if netbox_housekeeping.ip %}ip: {{ netbox_housekeeping.ip }}{% endif %}

          {% if netbox_housekeeping.hostname %}hostname: {{ netbox_housekeeping.hostname }}{% endif %}          
          {% if netbox_housekeeping.networks %}
      networks:
          {% for network in netbox_housekeeping.networks %}
              - {{network}}
          {% endfor %}
          {% endif %}

          depends_on:
            netbox:
              condition: service_healthy
          command:
            - /opt/netbox/housekeeping.sh
          healthcheck:
            start_period: 20s
            timeout: 3s
            interval: 15s
            test: "ps -aux | grep -v grep | grep -q housekeeping || exit 1"
        
        postgres:
          {% if postgres.ip %}ip: {{ postgres.ip }}{% endif %}

          {% if postgres.hostname %}hostname: {{ postgres.hostname }}{% endif %}          
          {% if postgres.networks %}
      networks:
          {% for network in postgres.networks %}
              - {{network}}
          {% endfor %}
          {% endif %}

          image: docker.io/postgres:16-alpine
          env_file: env/postgres.env
          volumes:
            - netbox-postgres-data:/var/lib/postgresql/data
        
        redis:
          image: docker.io/redis:7-alpine
          {% if redis.ip %}ip: {{ redis.ip }}{% endif %}

          {% if redis.hostname %}hostname: {{ redis.hostname }}{% endif %}          
          {% if redis.networks %}
      networks:
          {% for network in redis.networks %}
              - {{network}}
          {% endfor %}
          {% endif %}

          command:
            - sh
            - -c # this is to evaluate the $REDIS_PASSWORD from the env
            - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
          env_file: env/redis.env
          volumes:
            - netbox-redis-data:/data
        
        redis-cache:
          image: docker.io/redis:7-alpine
          {% if redis_cache.ip %}ip: {{ redis_cache.ip }}{% endif %}

          {% if redis_cache.hostname %}hostname: {{ redis_cache.hostname }}{% endif %}          
          {% if redis_cache.networks %}
      networks:
        {% for network in redis_cache.networks %}
          - {{network}}
        {% endfor %}
        {% endif %}

          command:
            - sh
            - -c # this is to evaluate the $REDIS_PASSWORD from the env
            - redis-server --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
          env_file: env/redis-cache.env
          volumes:
            - netbox-redis-cache-data:/data

      volumes:
        netbox-media-files:
          driver: local
        netbox-postgres-data:
          driver: local
        netbox-redis-cache-data:
          driver: local
        netbox-redis-data:
          driver: local
        netbox-reports-files:
          driver: local
        netbox-scripts-files:
          driver: local

  when:  netbox or netbox_worker or netbox_housekeeping or postgres or redis or redis_cache 
- name: Create docker-compose.override.yml
  copy:
    dest: "/tmp/netbox-docker/docker-compose.override.yml"
    content: |
      version: {{ version }}
      {{ overrides | to_yaml | indent(8) }}
      networks:
- name: override networks
  loop: "{{networks}}"
  loop_control:
    loop_var: network
  ansible.builtin.shell: | 
    cat<<'EOF'>>/tmp/netbox-docker/docker-compose.override.yml
        {{ network.name }}:        
          ipam:
              driver: bridge
              config:
                  subnet: {{ network.subnet }}
                  ip_range: {{ network.range }}
                  gateway: {{ network.gateway }}
    EOF


